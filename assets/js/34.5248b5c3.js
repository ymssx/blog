(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{579:function(t,s,n){"use strict";n.r(s);var a=n(22),p=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("DocInfo"),t._v(" "),n("h2",{attrs:{id:"传感器驱动代码的设计模式思考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#传感器驱动代码的设计模式思考"}},[t._v("#")]),t._v(" 传感器驱动代码的设计模式思考")]),t._v(" "),n("p",[t._v("在搜寻网络上的传感器驱动代码时，能看到许多面向过程式的代码。同时我在围观机械专业的同学时，他们的代码也多是面向过程式的，整体看起来十分混乱也不方便维护。\n作为一名软件工程师，当然要对自己的代码质量严格要求。")]),t._v(" "),n("p",[t._v("首先我们如何去定义一个传感器呢，对软件开发来说，传感器的硬件逻辑其实是我们不需要关心的，也就是说对于一个传感器我们只需要关心它能提供的功能就行了。")]),t._v(" "),n("p",[t._v("我首先想到的是用函数式编程直接暴露核心api，比如对于温度传感器，我只需要export一个getTemperature函数来获取温度即可，其电路逻辑代码全部在函数内部自行维护，再比如一个RGB的LED灯，我需要的是一个setEGB函数来设置LED灯的颜色即可，其中如何设置PWM，如何在程序结束自动cleanup由函数内部自行维护。")]),t._v(" "),n("p",[t._v("理想的使用方式")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" getTemperature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" setRGB "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sensor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" temperature "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getTemperature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temperature "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当温度过高时，设置led发出红光，否则绿光")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRGB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRGB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("考虑到经常需要连接多个同样的传感器，使用api时还需要传入针脚等配置信息，所以最终还是选择面向对象式编程，即一个传感器是一个对象。")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" Temperature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RGB_LEG")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sensor'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" temperature "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Temperature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BCM'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" led "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RGB_LED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'BCM'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temperature"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("geTemperature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当温度过高时，设置led发出红光，否则绿光")]),t._v("\n  led"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRGB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  led"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRGB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'green'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这种编程模式简单直观，我们只需要专注于业务逻辑即可")]),t._v(" "),n("h2",{attrs:{id:"部分代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#部分代码"}},[t._v("#")]),t._v(" 部分代码")]),t._v(" "),n("p",[t._v("以下是基于python的代码")]),t._v(" "),n("p",[t._v("因为以下代码结构都比较相似，可以考虑设计一个框架。")]),t._v(" "),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# encoding: utf-8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 超声波测距")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" atexit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" register\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Wave")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# channel -- [trig, echo]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BCM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel\n\n    trig_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" echo_channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel\n\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setmode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setwarnings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trig_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("echo_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IN"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## 程序执行结束前自动清理")]),t._v("\n    register"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("distance")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      control "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control\n      trig_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" echo_channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel\n\n      control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trig_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.000002")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trig_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.00001")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trig_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("echo_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n      start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("echo_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n      now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      during "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" now "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start\n\n      WAVE_SPEED "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("340")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" during "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" WAVE_SPEED "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" KeyboardInterrupt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("on_distance_change")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sensi "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" space "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    last_dis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      dis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("distance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("abs")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" last_dis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" sensi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      last_dis "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dis\n\n      time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("space"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cleanup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cleanup!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  wave "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Wave"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dis"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  wave"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_distance_change"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callback"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# encoding: utf-8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 控制RGB灯发出指定rgb颜色")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" atexit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" register\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RGB_LED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# channel -- [R, G, B]")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BCM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel\n    R_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" G_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B_channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel\n\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setmode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setwarnings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmR "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PWM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmG "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PWM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1999")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("PWM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B_channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5000")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    register"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRGB")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" R"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("R"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" G"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChangeDutyCycle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("R "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChangeDutyCycle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("G "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ChangeDutyCycle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("B "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("51")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" KeyboardInterrupt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmR"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmG"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pwmB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cleanup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cleanup!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  led "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RGB_LED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  led"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setRGB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("255")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("215")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("div",{staticClass:"language-py extra-class"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# encoding: utf-8")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 控制激光发射器的发射停止")]),t._v("\n \n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" atexit "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" register\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Beam")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BCM"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" channel\n\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setmode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setwarnings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("OUT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO\n\n    register"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HIGH"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" KeyboardInterrupt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("stop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("control"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("channel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("LOW"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    RPi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cleanup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cleanup!'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  beam "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Beam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  beam"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])],1)}),[],!1,null,null,null);s.default=p.exports}}]);